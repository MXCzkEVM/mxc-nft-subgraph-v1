type ChangedOwnerCutPerMillion @entity(immutable: true) {
  id: Bytes!
  ownerCutPerMillion: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ChangedPublicationFee @entity(immutable: true) {
  id: Bytes!
  publicationFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetaTransactionExecuted @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  relayerAddress: Bytes! # address
  functionSignature: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderCancelled @entity(immutable: true) {
  id: Bytes!
  MarketplaceV1_id: Bytes! # bytes32
  assetId: BigInt! # uint256
  seller: Bytes! # address
  nftAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderCreated @entity(immutable: true) {
  id: Bytes!
  MarketplaceV1_id: Bytes! # bytes32
  assetId: BigInt! # uint256
  seller: Bytes! # address
  nftAddress: Bytes! # address
  priceInWei: BigInt! # uint256
  expiresAt: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderSuccessful @entity(immutable: true) {
  id: Bytes!
  MarketplaceV1_id: Bytes! # bytes32
  assetId: BigInt! # uint256
  seller: Bytes! # address
  nftAddress: Bytes! # address
  totalPrice: BigInt! # uint256
  buyer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type MXCCollectionFactoryV1OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type collection @entity(immutable: true) {
  id: Bytes!
  collectionAddress: Bytes! # address
  name: String! # string
  owner: Bytes! # address
  symbol: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MXCNFTTokenV1OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type mint @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  tokenId: BigInt! # uint256
  uri: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
